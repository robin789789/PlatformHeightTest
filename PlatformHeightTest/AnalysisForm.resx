<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAADfAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA4gAAAP8AAAD1AAAA0QAAAM0AAADNAAAAzQAAAM0AAADNAAAAzQAAAM0AAADNAAAAzQAA
        AM0AAADNAAAAzQAAAM0AAADNAAAAzQAAAM0AAADNAAAAzQAAAM0AAADNAAAAzQAAAM0AAADNAAAAzQAA
        AM0AAADNAAAAzQAAAM4AAACvAAAA/wAAANEAAAAfAAAADwAAAA0AAAAMAAAADAAAAAwAAAAMAAAADwAA
        ABAAAAAOAAAADAAAAAwAAAAMAAAADAAAAA4AAAAQAAAAEAAAAA0AAAAMAAAADAAAAAwAAAAMAAAADwAA
        ABAAAAAOAAAADAAAAAwAAAAMAAAADAAAAAUAAAD/AAAAzQAAAA8AAAAEAAAAOAAAAEkAAABIAAAASQAA
        AEAAAAAMAAAAAAAAABgAAABGAAAASAAAAEgAAABJAAAAJwAAAAAAAAADAAAANQAAAEkAAABIAAAASQAA
        AEAAAAAMAAAAAAAAABgAAABGAAAASAAAAEgAAABIAAAAMQAAAP8AAADNAAAADQAAADgAAADpAAAA+gAA
        APkAAAD6AAAA9gAAAF0AAAAAAAAAkQAAAPwAAAD5AAAA+QAAAPwAAADBAAAADQAAAC4AAADjAAAA+wAA
        APkAAAD6AAAA9gAAAF0AAAAAAAAAkQAAAPwAAAD5AAAA+QAAAPoAAADnAAAA/wAAAM0AAAAMAAAASQAA
        APoAAAD/AAAA/wAAAP8AAAD/AAAAcgAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAANgAAAATAAAAPAAA
        APYAAAD/AAAA/wAAAP8AAAD/AAAAcgAAAAAAAACqAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAA
        AAwAAABIAAAA+QAAAP8AAAD/AAAA/wAAAP8AAABxAAAAAAAAAKkAAAD/AAAA/wAAAP8AAAD/AAAA1wAA
        ABMAAAA8AAAA9QAAAP8AAAD/AAAA/wAAAP8AAABxAAAAAAAAAKkAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADNAAAADAAAAEgAAAD5AAAA/wAAAP8AAAD/AAAA/wAAAHEAAAAAAAAAqQAAAP8AAAD/AAAA/wAA
        AP8AAADXAAAAEwAAADwAAAD1AAAA/wAAAP8AAAD/AAAA/wAAAHEAAAAAAAAAqQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAM0AAAAMAAAASAAAAPkAAAD/AAAA/wAAAP8AAAD/AAAAcQAAAAAAAACpAAAA/wAA
        AP8AAAD/AAAA/wAAANcAAAATAAAAPAAAAPUAAAD/AAAA/wAAAP8AAAD/AAAAcQAAAAAAAACpAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAAAwAAABJAAAA+gAAAP8AAAD/AAAA/wAAAP8AAAByAAAAAAAA
        AKkAAAD/AAAA/wAAAP8AAAD/AAAA1wAAABMAAAA8AAAA9QAAAP8AAAD/AAAA/wAAAP8AAABxAAAAAAAA
        AKkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADNAAAADAAAADsAAADuAAAA/gAAAP0AAAD9AAAA+gAA
        AGAAAAAAAAAAqQAAAP8AAAD/AAAA/wAAAP8AAADXAAAAEwAAADwAAAD1AAAA/wAAAP8AAAD/AAAA/wAA
        AHEAAAAAAAAAqQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAM0AAAAPAAAABwAAAEQAAABXAAAAVgAA
        AFcAAABNAAAAEAAAAAEAAACpAAAA/wAAAP8AAAD/AAAA/wAAANcAAAATAAAAPAAAAPUAAAD/AAAA/wAA
        AP8AAAD/AAAAcQAAAAAAAACpAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAABAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAKkAAAD/AAAA/wAAAP8AAAD/AAAA1wAAABMAAAA8AAAA9QAA
        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
        AHAAAAAWAAAAlAAAAP8AAABiAAAAAAAAAAAAAAAAAAAA/wAAAM0AAAAQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMQAA
        AJoAAADwAAAA/wAAAMgAAACpAAAA/gAAAMcAAAATAAAAAAAAAAAAAAD/AAAAzQAAABAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAD0AAACxAAAA+wAAAP4AAAD+AAAA/AAAAGIAAAAAAAAAAAAAAP8AAADNAAAAEAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMUAAAD3AAAA/wAAAP8AAAD/AAAAxwAAABEAAAAAAAAA/wAA
        AM0AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaAAAA6AAAAOkAAADoAAAA6AAAAOoAAAC/AAAAFwAA
        AAAAAAD/AAAAzgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAjAAAAKAAAACcAAAAnAAAAKAAA
        ABcAAAAAAAAAAAAAAOIAAACvAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAIAAAADgABAA+AAAAP4AAAD/gAAA/+
        AAEP/4AAD//AAA//8AAP//wAD//8AA///AA=
</value>
  </data>
</root>